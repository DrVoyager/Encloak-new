class cfhider.PiEstimator$HaltonSequence extends java.lang.Object
{
    static final int[] P;
    static final int[] K;
    public long index;
    public double[] x;
    public double[][] q;
    public int[][] d;
    public java.lang.String Ouuid;
    public static java.lang.String Cuuid;

    void <init>(long)
    {
        cfhider.PiEstimator$HaltonSequence r0;
        long l0, l2, $l17, $l18, $l21, $l22, $l24, invokeLineNo;
        int i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i19, $i20, $i23, $i25, $i26;
        int[] $r1, $r2, $r4, $r6, $r8, $r12, $r13, $r14, $r16, $r21, $r23, $r24, $r26, $r27, $r30, tmpUpdateArray15;
        double[] $r3, $r10, $r15, $r18, $r20, $r28, $r32, tmpUpdateArray12;
        double[][] $r5, $r9, $r17, $r19, $r31;
        int[][] $r7, $r11, $r22, $r25, $r29;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.lang.String getUUID, invokeUUID, uuidtemp, tmpCuuid, tmpCuuid, tmpOuuid6, tmpCuuid, tmpOuuid8, tmpCuuid, tmpOuuid10, tmpCuuid, tmpOuuid13, tmpCuuid, tmpCuuid, tmpOuuid17, tmpCuuid, tmpOuuid20, tmpOuuid21, tmpCuuid, tmpOuuid23, tmpCuuid, tmpOuuid25, tmpCuuid, tmpOuuid27, tmpOuuid28, tmpOuuid29;
        boolean branchInvokeResult;
        invoker.sgx_invoker sgxInvoker;

        r0 := @this: cfhider.PiEstimator$HaltonSequence;
        l0 := @parameter0: long;
        tmpUpdateArray15 = null;
        tmpUpdateArray12 = null;
        i1 = 0;
        $r1 = null;
        l2 = 0L;
        i3 = 0;
        $r2 = null;
        $i4 = 0;
        $r3 = null;
        $r4 = null;
        $i5 = 0;
        $r5 = null;
        $r6 = null;
        $i6 = 0;
        $r7 = null;
        $r8 = null;
        $i7 = 0;
        $r9 = null;
        $i8 = 0;
        $r10 = null;
        $r11 = null;
        $r12 = null;
        $i9 = 0;
        $r13 = null;
        i10 = 0;
        $r14 = null;
        $i11 = 0;
        $r15 = null;
        $r16 = null;
        $i12 = 0;
        $r17 = null;
        $r18 = null;
        $i13 = 0;
        $d0 = 0.0;
        $r19 = null;
        $r20 = null;
        $i14 = 0;
        $r21 = null;
        $i15 = 0;
        $d1 = 0.0;
        $d2 = 0.0;
        $r22 = null;
        $r23 = null;
        $r24 = null;
        $i16 = 0;
        $l17 = 0L;
        $l18 = 0L;
        $i19 = 0;
        $r25 = null;
        $r26 = null;
        $i20 = 0;
        $l21 = 0L;
        $l22 = 0L;
        $r27 = null;
        $i23 = 0;
        $l24 = 0L;
        $r28 = null;
        $i25 = 0;
        $d3 = 0.0;
        $r29 = null;
        $r30 = null;
        $i26 = 0;
        $d4 = 0.0;
        $r31 = null;
        $r32 = null;
        $d5 = 0.0;
        $d6 = 0.0;
        $d7 = 0.0;
        invokeLineNo = 0L;
        getUUID = null;
        invokeUUID = null;
        branchInvokeResult = 0;
        sgxInvoker = null;
        sgxInvoker = new invoker.sgx_invoker;
        specialinvoke sgxInvoker.<invoker.sgx_invoker: void <init>()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initenclave()>();
        getUUID = virtualinvoke sgxInvoker.<invoker.sgx_invoker: java.lang.String getUUID()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, invokeUUID, invokeLineNo);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void initNodeInEnclave(java.lang.String,int,int)>(getUUID, 7, 17);
        uuidtemp = virtualinvoke sgxInvoker.<invoker.sgx_invoker: java.lang.String getUUID()>();
        r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid> = uuidtemp;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<cfhider.PiEstimator$HaltonSequence: long index> = l0;
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 0L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 1L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 2L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 3L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 4L);
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 5L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        $i5 = lengthof $r4;
        $r5 = newarray (double[])[$i5];
        tmpOuuid6 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid6);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 6L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 7L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        $i6 = lengthof $r6;
        $r7 = newarray (int[])[$i6];
        tmpOuuid8 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid8);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 8L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        i1 = 0;

     label0:
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 9L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        $i7 = lengthof $r8;
        if i1 >= $i7 goto label1;

        tmpOuuid10 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid10);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 10L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 11L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        $i8 = $r1[i1];
        $r10 = newarray (double)[$i8];
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>(i1);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>(i3);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i5);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i6);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i7);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i8);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i11);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i12);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i13);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i16);
        tmpUpdateArray12 = $r10;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(double[])>(tmpUpdateArray12);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpOuuid10);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 12L);
        tmpOuuid13 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid13);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 13L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 14L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        $i9 = $r12[i1];
        $r13 = newarray (int)[$i9];
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>(i1);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i6);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i7);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i14);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i19);
        tmpUpdateArray15 = $r13;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int[])>(tmpUpdateArray15);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpOuuid13);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 15L);
        i1 = i1 + 1;
        goto label0;

     label1:
        i10 = 0;

     label2:
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 16L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        $i11 = lengthof $r14;
        if i10 >= $i11 goto label7;

        l2 = r0.<cfhider.PiEstimator$HaltonSequence: long index>;
        tmpOuuid17 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid17);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 17L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>(i10);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>(i3);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i5);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i6);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i7);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i11);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i12);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i13);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i16);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i19);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpOuuid17);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 18L);
        i3 = 0;

     label3:
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 19L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        $i12 = $r16[i10];
        if i3 >= $i12 goto label6;

        tmpOuuid20 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid20);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 20L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        $r18 = $r17[i10];
        $i13 = i3;
        if i3 != 0 goto label4;

        $d0 = 1.0;
        goto label5;

     label4:
        tmpOuuid21 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid21);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 21L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        $r20 = $r19[i10];
        $i14 = i3 - 1;
        $d0 = $r20[$i14];

     label5:
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 22L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        $i15 = $r21[i10];
        $d1 = (double) $i15;
        $d2 = $d0 / $d1;
        $r18[$i13] = $d2;
        tmpOuuid23 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid23);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 23L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        $r23 = $r22[i10];
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 24L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        $i16 = $r24[i10];
        $l17 = (long) $i16;
        $l18 = l2 % $l17;
        $i19 = (int) $l18;
        $r23[i3] = $i19;
        tmpOuuid25 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid25);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 25L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        $r26 = $r25[i10];
        $i20 = $r26[i3];
        $l21 = (long) $i20;
        $l22 = l2 - $l21;
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 26L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        $i23 = $r27[i10];
        $l24 = (long) $i23;
        l2 = $l22 / $l24;
        tmpOuuid27 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid27);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 27L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        $i25 = i10;
        $d3 = $r28[$i25];
        tmpOuuid28 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid28);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 28L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        $r30 = $r29[i10];
        $i26 = $r30[i3];
        $d4 = (double) $i26;
        tmpOuuid29 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid29);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 29L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        $r32 = $r31[i10];
        $d5 = $r32[i3];
        $d6 = $d4 * $d5;
        $d7 = $d3 + $d6;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i25);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>(i3);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i5);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i7);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i9);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i11);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i12);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i19);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i20);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>($i26);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpOuuid27);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 30L);
        i3 = i3 + 1;
        goto label3;

     label6:
        i10 = i10 + 1;
        goto label2;

     label7:
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean deleteValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, "", 0L);
        return;
    }

    double[] nextPoint()
    {
        cfhider.PiEstimator$HaltonSequence r0, $r1;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        long $l2, $l3, invokeLineNo;
        int[] $r2, $r3, $r5, $r10, $r11, $r13;
        int[][] $r4, $r9, $r12;
        double[] $r6, $r8, $r14, $r16, $r17;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        double[][] $r7, $r15;
        java.lang.String getUUID, invokeUUID, tmpCuuid, tmpCuuid, tmpOuuid39, tmpOuuid44, tmpOuuid47, tmpOuuid51, tmpCuuid, tmpOuuid56, tmpOuuid58, tmpOuuid63, tmpOuuid70;
        boolean branchInvokeResult;
        invoker.sgx_invoker sgxInvoker;

        r0 := @this: cfhider.PiEstimator$HaltonSequence;
        $r1 = null;
        i0 = 0;
        i1 = 0;
        $l2 = 0L;
        $l3 = 0L;
        $r2 = null;
        $i4 = 0;
        $r3 = null;
        $i5 = 0;
        $r4 = null;
        $r5 = null;
        $i6 = 0;
        $i7 = 0;
        $i8 = 0;
        $r6 = null;
        $i9 = 0;
        $d0 = 0.0;
        $r7 = null;
        $r8 = null;
        $d1 = 0.0;
        $d2 = 0.0;
        $r9 = null;
        $r10 = null;
        $i10 = 0;
        $r11 = null;
        $i11 = 0;
        $r12 = null;
        $r13 = null;
        $r14 = null;
        $i12 = 0;
        $d3 = 0.0;
        $d4 = 0.0;
        $r15 = null;
        $r16 = null;
        $i13 = 0;
        $d5 = 0.0;
        $r17 = null;
        invokeLineNo = 0L;
        getUUID = null;
        invokeUUID = null;
        branchInvokeResult = 0;
        sgxInvoker = null;
        sgxInvoker = new invoker.sgx_invoker;
        specialinvoke sgxInvoker.<invoker.sgx_invoker: void <init>()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initenclave()>();
        getUUID = virtualinvoke sgxInvoker.<invoker.sgx_invoker: java.lang.String getUUID()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, invokeUUID, invokeLineNo);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void initNodeInEnclave(java.lang.String,int,int)>(getUUID, 7, 15);
        $r1 = r0;
        $l2 = $r1.<cfhider.PiEstimator$HaltonSequence: long index>;
        $l3 = $l2 + 1L;
        $r1.<cfhider.PiEstimator$HaltonSequence: long index> = $l3;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 31L);

     label0:
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 32L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 33L);
        branchInvokeResult = virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean getBooleanValue(java.lang.String,long)>(getUUID, 34L);
        if branchInvokeResult == 1 goto label6;

        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 35L);

     label1:
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 36L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 37L);
        branchInvokeResult = virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean getBooleanValue(java.lang.String,long)>(getUUID, 38L);
        if branchInvokeResult == 1 goto label5;

        tmpOuuid39 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid39);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 39L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 40L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 41L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 42L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpOuuid39);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 43L);
        tmpOuuid44 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid44);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 44L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 45L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 46L);
        tmpOuuid47 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid47);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 47L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 48L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 49L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpOuuid44);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 50L);
        tmpOuuid51 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid51);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 51L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 52L);
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 53L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 54L);
        branchInvokeResult = virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean getBooleanValue(java.lang.String,long)>(getUUID, 55L);
        if branchInvokeResult == 1 goto label2;

        goto label5;

     label2:
        tmpOuuid56 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid56);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 56L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpOuuid56);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 57L);
        tmpOuuid58 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid58);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 58L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 59L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 60L);
        branchInvokeResult = virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean getBooleanValue(java.lang.String,long)>(getUUID, 61L);
        if branchInvokeResult == 1 goto label3;

        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 62L);
        goto label4;

     label3:
        tmpOuuid63 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid63);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 63L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 64L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 65L);

     label4:
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 66L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpOuuid58);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 67L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 68L);
        goto label1;

     label5:
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 69L);
        goto label0;

     label6:
        tmpOuuid70 = r0.<cfhider.PiEstimator$HaltonSequence: java.lang.String Ouuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setOuuid(java.lang.String)>(tmpOuuid70);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 70L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearOuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 71L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean deleteValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, "", 0L);
        return $r17;
    }

    static void <clinit>()
    {
        int[] $r0, $r1;
        long invokeLineNo;
        java.lang.String getUUID, invokeUUID, uuidtemp, tmpCuuid, tmpCuuid;
        boolean branchInvokeResult;
        invoker.sgx_invoker sgxInvoker;

        $r0 = null;
        $r1 = null;
        invokeLineNo = 0L;
        getUUID = null;
        invokeUUID = null;
        branchInvokeResult = 0;
        sgxInvoker = null;
        sgxInvoker = new invoker.sgx_invoker;
        specialinvoke sgxInvoker.<invoker.sgx_invoker: void <init>()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initenclave()>();
        getUUID = virtualinvoke sgxInvoker.<invoker.sgx_invoker: java.lang.String getUUID()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, invokeUUID, invokeLineNo);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void initNodeInEnclave(java.lang.String,int,int)>(getUUID, 7, 2);
        uuidtemp = virtualinvoke sgxInvoker.<invoker.sgx_invoker: java.lang.String getUUID()>();
        <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid> = uuidtemp;
        $r0 = newarray (int)[2];
        $r0[0] = 2;
        $r0[1] = 3;
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 72L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        $r1 = newarray (int)[2];
        $r1[0] = 63;
        $r1[1] = 40;
        tmpCuuid = <cfhider.PiEstimator$HaltonSequence: java.lang.String Cuuid>;
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void setCuuid(java.lang.String)>(tmpCuuid);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 73L);
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clearCuuid()>();
        virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean deleteValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, "", 0L);
        return;
    }
}
